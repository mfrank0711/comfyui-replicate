{
    "url": "https://replicate.com/black-forest-labs/flux-kontext-pro",
    "owner": "black-forest-labs",
    "name": "flux-kontext-pro",
    "description": "A state-of-the-art text-based image editing model that delivers high-quality outputs with excellent prompt following and consistent results for transforming images through natural language",
    "visibility": "public",
    "github_url": null,
    "paper_url": null,
    "license_url": null,
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/e74eecd6-daf1-4050-9f04-36313bd6f007/two-people-cropped.webp",
    "default_example": {
        "id": "ks1w6tyk9nrma0cq6ycacv92xm",
        "model": "black-forest-labs/flux-kontext-pro",
        "version": "hidden",
        "status": "succeeded",
        "input": {
            "prompt": "Make this a 90s cartoon",
            "input_image": "https://replicate.delivery/pbxt/N55l5TWGh8mSlNzW8usReoaNhGbFwvLeZR3TX1NL4pd2Wtfv/replicate-prediction-f2d25rg6gnrma0cq257vdw2n4c.png",
            "aspect_ratio": "match_input_image",
            "output_format": "jpg",
            "safety_tolerance": 2
        },
        "output": "https://replicate.delivery/xezq/83OKs6yfdoT5YCpfREnrFFbqLbfWbus8Q0e06fQ0BAMDRKamC/tmpu3nqollf.jpg",
        "logs": "Using seed: 1944901477\nGenerating...\nGenerated image in 4.2sec\nDownloading 207029 bytes\nDownloaded 0.20MB in 0.14sec",
        "error": null,
        "metrics": {
            "image_count": 1,
            "predict_time": 4.372377316,
            "total_time": 4.402262
        },
        "created_at": "2025-06-03T21:00:51.917000Z",
        "started_at": "2025-06-03T21:00:51.946885Z",
        "completed_at": "2025-06-03T21:00:56.319262Z",
        "urls": {
            "stream": "https://stream.replicate.com/v1/files/bcwr-53lhpegfrlvp2okti2n2ctaam2fuilck6mmi35jvdikz32r3mfkq",
            "get": "https://api.replicate.com/v1/predictions/ks1w6tyk9nrma0cq6ycacv92xm",
            "cancel": "https://api.replicate.com/v1/predictions/ks1w6tyk9nrma0cq6ycacv92xm/cancel"
        }
    },
    "latest_version": {
        "id": "15589a1a9e6b240d246752fc688267b847db4858910cc390794703384b6a5443",
        "created_at": "2025-06-03T14:09:34.544634+00:00",
        "cog_version": "0.15.2",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {},
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "prompt"
                        ],
                        "properties": {
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 3,
                                "nullable": true,
                                "description": "Random seed. Set for reproducible generation"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 0,
                                "description": "Text description of what you want to generate, or the instruction on how to edit the given image."
                            },
                            "input_image": {
                                "type": "string",
                                "title": "Input Image",
                                "format": "uri",
                                "x-order": 1,
                                "nullable": true,
                                "description": "Image to use as reference. Must be jpeg, png, gif, or webp."
                            },
                            "aspect_ratio": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/aspect_ratio"
                                    }
                                ],
                                "default": "match_input_image",
                                "x-order": 2,
                                "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image."
                            },
                            "output_format": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/output_format"
                                    }
                                ],
                                "default": "png",
                                "x-order": 4,
                                "description": "Output format for the generated image"
                            },
                            "safety_tolerance": {
                                "type": "integer",
                                "title": "Safety Tolerance",
                                "default": 2,
                                "maximum": 6,
                                "minimum": 0,
                                "x-order": 5,
                                "description": "Safety tolerance, 0 is most strict and 6 is most permissive. 2 is currently the maximum allowed when input images are used."
                            }
                        }
                    },
                    "Output": {
                        "type": "string",
                        "title": "Output",
                        "format": "uri"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "aspect_ratio": {
                        "enum": [
                            "match_input_image",
                            "1:1",
                            "16:9",
                            "9:16",
                            "4:3",
                            "3:4",
                            "3:2",
                            "2:3",
                            "4:5",
                            "5:4",
                            "21:9",
                            "9:21",
                            "2:1",
                            "1:2"
                        ],
                        "type": "string",
                        "title": "aspect_ratio",
                        "description": "An enumeration."
                    },
                    "output_format": {
                        "enum": [
                            "jpg",
                            "png"
                        ],
                        "type": "string",
                        "title": "output_format",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "context": {
                                "type": "object",
                                "title": "Context",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}